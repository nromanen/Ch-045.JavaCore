package db_teacher;

import db_teacher.model.Category;
import db_teacher.model.Department;
import db_teacher.model.Positions;
import db_teacher.model.Teacher;
import org.joda.time.DateTime;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by roma on 01.11.2016.
 */
public class DBWorker {

    private DBConnector connection = new DBConnector();
    private static Statement statement;
    private static ResultSet resultSet;

    private static final String SEL_ALL_TEACHER = "SELECT * FROM teacher";
    private static final String SEL_ALL_DEP = "SELECT * FROM department";
    private static final String INSERT_NEW = "INSERT INTO teacher VALUES(?,?,?,?,?,?,?,?)";
    private static final String insertNew = "INSERT INTO teacher (firstName, lastName`, position, date_birthday, department, qualifying_cat, load) " +
            "VALUES (?,?,?,?,?,?,?);";
    public DBWorker(){
    }

    public List<Teacher> getAllTeacher(){
        try {
            statement = connection.getConnection().createStatement();
            resultSet = statement.executeQuery(SEL_ALL_TEACHER);

            List<Teacher>teachers = new ArrayList<>();

            while(resultSet.next()){
                Teacher teacher = new Teacher();

                teacher.setId(resultSet.getInt("id"));
                teacher.setFirstName(resultSet.getString("firstName"));
                teacher.setLastName(resultSet.getString("lastName"));
                teacher.setPosition(Positions.valueOf(resultSet.getString("position")));
                teacher.setDateOfBirthday(resultSet.getDate("date_birthday"));
                teacher.setDepartmentId(resultSet.getInt("department"));
                teacher.setQualifyingCategory(Category.valueOf(resultSet.getString("qualifying_cat")));
                teacher.setLoad(resultSet.getInt("load"));
                
                teachers.add(teacher);
            }
            return teachers;
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try { statement.close(); resultSet.close();} catch (SQLException e) { e.printStackTrace(); }
        }
        return null;
    }

    public List<Department> getAllDepartment(){
        try {
            statement = connection.getConnection().createStatement();
            resultSet = statement.executeQuery(SEL_ALL_DEP);

            List<Department>departments = new ArrayList<>();

            while (resultSet.next()){
                Department department = new Department();

                department.setId(resultSet.getInt("id"));
                department.setTitle(resultSet.getString("title"));

                departments.add(department);
            }
            return departments;
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try { statement.close(); resultSet.close();} catch (SQLException e) { e.printStackTrace(); }
        }
        return null;
    }

    public int addNewTeacher(){
        PreparedStatement preparedStatement = null;
        try {
            preparedStatement = connection.getConnection().prepareStatement(INSERT_NEW);
            /*
            ResultSet tableKeys = preparedStatement.getGeneratedKeys();
            preparedStatement.executeUpdate();
            tableKeys.next();
            int autoGeneratedID = tableKeys.getInt(1);

            preparedStatement.setInt(1,autoGeneratedID);
            */
            //test insert
            preparedStatement.setInt(1,8);
            preparedStatement.setString(2, "Simona");
            preparedStatement.setString(3,"Gruba");
            preparedStatement.setString(4, Positions.UKRAINIAN.toString());
            preparedStatement.setDate(5, (Date) new DateTime("1988-12-11").toDate());
            preparedStatement.setInt(6, 3);
            preparedStatement.setString(7,Category.SPECIALIST_2_CAT.toString());
            preparedStatement.setInt(8,18);

            return preparedStatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }
}
